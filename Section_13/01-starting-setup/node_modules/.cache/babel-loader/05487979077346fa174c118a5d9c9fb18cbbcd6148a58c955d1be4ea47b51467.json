{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antan\\\\Desktop\\\\ReactLearning\\\\Section_13\\\\01-starting-setup\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from \"react\";\nimport Button from \"./components/UI/Button/Button\";\nimport \"./App.css\";\nimport DemoOutput from \"./components/Demo/DemoOutput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showParagraph, setShowParagraph] = useState(false);\n  const [allowToggle, setAllowToggle] = useState();\n  console.log(\"APP RUNNING\");\n\n  //useCallback is used to save the function and not reexecuted when component is recreated. Save in same memory location\n  const toggleParagraphHandler = useCallback(() => {\n    setShowParagraph(prevState => !prevState);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hi there!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DemoOutput, {\n      show: showParagraph\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggleParagraphHandler,\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"t2u1+9fbNVi6CWYydlIE60q9l4E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","Button","DemoOutput","jsxDEV","_jsxDEV","App","_s","showParagraph","setShowParagraph","allowToggle","setAllowToggle","console","log","toggleParagraphHandler","prevState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","show","onClick","_c","$RefreshReg$"],"sources":["C:/Users/antan/Desktop/ReactLearning/Section_13/01-starting-setup/src/App.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport Button from \"./components/UI/Button/Button\";\nimport \"./App.css\";\nimport DemoOutput from \"./components/Demo/DemoOutput\";\n\nfunction App() {\n  const [showParagraph, setShowParagraph] = useState(false);\n  const [allowToggle, setAllowToggle] = useState()\n  console.log(\"APP RUNNING\");\n\n  //useCallback is used to save the function and not reexecuted when component is recreated. Save in same memory location\n  const toggleParagraphHandler = useCallback(() => {\n    setShowParagraph((prevState) => !prevState);\n  },[]);\n\n  return (\n    <div className=\"app\">\n      <h1>Hi there!</h1>\n      <DemoOutput show={\n        showParagraph\n      }/>\n      <Button onClick={toggleParagraphHandler}>Click me</Button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACpD,OAAOC,MAAM,MAAM,+BAA+B;AAClD,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC;EAChDY,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;;EAE1B;EACA,MAAMC,sBAAsB,GAAGb,WAAW,CAAC,MAAM;IAC/CQ,gBAAgB,CAAEM,SAAS,IAAK,CAACA,SAAS,CAAC;EAC7C,CAAC,EAAC,EAAE,CAAC;EAEL,oBACEV,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBZ,OAAA;MAAAY,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBhB,OAAA,CAACF,UAAU;MAACmB,IAAI,EACdd;IACD;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACHhB,OAAA,CAACH,MAAM;MAACqB,OAAO,EAAET,sBAAuB;MAAAG,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV;AAACd,EAAA,CAnBQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAqBZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}