{"ast":null,"code":"import { Component } from \"react\";\nclass ErrorBoundary extends Component {\n  constructor() {\n    super();\n    this.state = {\n      hasError: false\n    };\n  }\n  //For handling unexpected error in react (class_based) alternate for try catch\n  //Can't add it to functional component, no equivalent\n  componentDidCatch(error) {\n    this.setState({\n      hasError: true\n    });\n  }\n  render() {\n    if (t) return this.props.children;\n  }\n}\nexport default ErrorBoundary;","map":{"version":3,"names":["Component","ErrorBoundary","constructor","state","hasError","componentDidCatch","error","setState","render","t","props","children"],"sources":["C:/Users/antan/Desktop/ReactLearning/Section_14_class_based/01-starting-project/src/components/ErrorBoundary.js"],"sourcesContent":["import { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { hasError: false };\r\n  }\r\n  //For handling unexpected error in react (class_based) alternate for try catch\r\n  //Can't add it to functional component, no equivalent\r\n  componentDidCatch(error) {\r\n    this.setState({ hasError: true });\r\n  }\r\n  render() {\r\n    if(t)\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AAEjC,MAAMC,aAAa,SAASD,SAAS,CAAC;EACpCE,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,KAAK,GAAG;MAAEC,QAAQ,EAAE;IAAM,CAAC;EAClC;EACA;EACA;EACAC,iBAAiBA,CAACC,KAAK,EAAE;IACvB,IAAI,CAACC,QAAQ,CAAC;MAAEH,QAAQ,EAAE;IAAK,CAAC,CAAC;EACnC;EACAI,MAAMA,CAAA,EAAG;IACP,IAAGC,CAAC,EACJ,OAAO,IAAI,CAACC,KAAK,CAACC,QAAQ;EAC5B;AACF;AAEA,eAAeV,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}