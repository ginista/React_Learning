{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antan\\\\Desktop\\\\ReactLearning\\\\Practice1\\\\01-starting-setup\\\\01-starting-setup\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport \"./ExpenseForm.css\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpenseForm(props) {\n  _s();\n  // const [date, setDate] = useState(\"\");\n  //const [title, setTitle] = useState(\"\");\n  //const [amount, setAmount] = useState(\"\");\n  const [userInput, setUserInput] = useState({\n    title: \"\",\n    amount: \"\",\n    date: \"\"\n  });\n  const [NewExpense, setNewExpense] = useState( /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: displayForm,\n    children: \"Add New Expense\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 48\n  }, this));\n  const displayForm = () => {\n    set;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Handle form submission here (e.g., send data to server or perform actions)\n    console.log(userInput);\n    props.onSaveExpenseData(userInput);\n    setUserInput({\n      date: '',\n      title: \"\",\n      amount: \"\"\n    });\n  };\n  const inputChangeHandler = (identifier, event) => {\n    if (identifier === 'title') {\n      setUserInput(prevState => ({\n        ...prevState,\n        title: event.target.value\n      }));\n    } else if (identifier === 'date') {\n      const inputDate = new Date(event.target.value);\n      setUserInput({\n        ...userInput,\n        date: inputDate\n      });\n    } else {\n      setUserInput(prevState => {\n        return {\n          ...prevState,\n          amount: event.target.value\n        };\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: NewExpense\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(ExpenseForm, \"W7auXJxeyrGWYBm/idLgrHmNuSA=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ExpenseForm","props","_s","userInput","setUserInput","title","amount","date","NewExpense","setNewExpense","onClick","displayForm","children","fileName","_jsxFileName","lineNumber","columnNumber","set","handleSubmit","e","preventDefault","console","log","onSaveExpenseData","inputChangeHandler","identifier","event","prevState","target","value","inputDate","Date","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/antan/Desktop/ReactLearning/Practice1/01-starting-setup/01-starting-setup/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import \"./ExpenseForm.css\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction ExpenseForm(props) {\r\n // const [date, setDate] = useState(\"\");\r\n  //const [title, setTitle] = useState(\"\");\r\n  //const [amount, setAmount] = useState(\"\");\r\n  const[userInput, setUserInput] = useState({\r\n    title:\"\",\r\n    amount:\"\",\r\n    date:\"\"\r\n  })\r\n  const [NewExpense, setNewExpense] = useState(<button onClick={displayForm}>Add New Expense</button>);\r\n  const displayForm = () => {\r\n    set\r\n\r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Handle form submission here (e.g., send data to server or perform actions)\r\n    console.log(userInput);\r\n    props.onSaveExpenseData(userInput);\r\n    setUserInput({date:'',title:\"\",amount:\"\"});\r\n  };\r\n  const inputChangeHandler = (identifier, event)=>{\r\n    if(identifier==='title'){\r\n      setUserInput((prevState) => ({\r\n        ...prevState,\r\n        title: event.target.value\r\n      }))}\r\n     \r\n    else if(identifier ==='date'){\r\n      const inputDate = new Date(event.target.value);\r\n      setUserInput({...userInput, date:inputDate})\r\n    }\r\n    else{\r\n      setUserInput((prevState)=>{\r\n        return{...prevState,amount:event.target.value}\r\n      })\r\n    }\r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {NewExpense}\r\n      \r\n    </form>\r\n  );\r\n}\r\nexport default ExpenseForm;\r\n"],"mappings":";;AAAA,OAAO,mBAAmB;AAC1B,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,WAAWA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC3B;EACC;EACA;EACA,MAAK,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC;IACxCQ,KAAK,EAAC,EAAE;IACRC,MAAM,EAAC,EAAE;IACTC,IAAI,EAAC;EACP,CAAC,CAAC;EACF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,eAACE,OAAA;IAAQW,OAAO,EAAEC,WAAY;IAAAC,QAAA,EAAC;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC,CAAC;EACpG,MAAML,WAAW,GAAGA,CAAA,KAAM;IACxBM,GAAG;EAEL,CAAC;EACD,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACAC,OAAO,CAACC,GAAG,CAACnB,SAAS,CAAC;IACtBF,KAAK,CAACsB,iBAAiB,CAACpB,SAAS,CAAC;IAClCC,YAAY,CAAC;MAACG,IAAI,EAAC,EAAE;MAACF,KAAK,EAAC,EAAE;MAACC,MAAM,EAAC;IAAE,CAAC,CAAC;EAC5C,CAAC;EACD,MAAMkB,kBAAkB,GAAGA,CAACC,UAAU,EAAEC,KAAK,KAAG;IAC9C,IAAGD,UAAU,KAAG,OAAO,EAAC;MACtBrB,YAAY,CAAEuB,SAAS,KAAM;QAC3B,GAAGA,SAAS;QACZtB,KAAK,EAAEqB,KAAK,CAACE,MAAM,CAACC;MACtB,CAAC,CAAC,CAAC;IAAA,CAAC,MAED,IAAGJ,UAAU,KAAI,MAAM,EAAC;MAC3B,MAAMK,SAAS,GAAG,IAAIC,IAAI,CAACL,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;MAC9CzB,YAAY,CAAC;QAAC,GAAGD,SAAS;QAAEI,IAAI,EAACuB;MAAS,CAAC,CAAC;IAC9C,CAAC,MACG;MACF1B,YAAY,CAAEuB,SAAS,IAAG;QACxB,OAAM;UAAC,GAAGA,SAAS;UAACrB,MAAM,EAACoB,KAAK,CAACE,MAAM,CAACC;QAAK,CAAC;MAChD,CAAC,CAAC;IACJ;EACF,CAAC;EACD,oBACE9B,OAAA;IAAMiC,QAAQ,EAAEd,YAAa;IAAAN,QAAA,EAC1BJ;EAAU;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEP,CAAC;AAEX;AAACd,EAAA,CA5CQF,WAAW;AAAAiC,EAAA,GAAXjC,WAAW;AA6CpB,eAAeA,WAAW;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}