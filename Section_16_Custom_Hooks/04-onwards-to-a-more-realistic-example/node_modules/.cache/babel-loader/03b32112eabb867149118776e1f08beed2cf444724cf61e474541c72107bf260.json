{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nconst useDao = (requestConfig, applyData) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = async taskText => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : 'GET',\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n  return {\n    isLoading,\n    // alternative for isLoadig:isLoading,\n    error,\n    sendRequest\n  };\n};\n_s(useDao, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\nexport default useDao;","map":{"version":3,"names":["useState","useDao","requestConfig","applyData","_s","isLoading","setIsLoading","error","setError","sendRequest","taskText","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"sources":["C:/Users/antan/Desktop/ReactLearning/Section_16_Custom_Hooks/04-onwards-to-a-more-realistic-example/src/hooks/useDao.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useDao = (requestConfig, applyData) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const sendRequest = async (taskText) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(\r\n       requestConfig.url,{\r\n        method: requestConfig.method ? requestConfig.method:'GET',\r\n        headers: requestConfig.headers ? requestConfig.headers:{},\r\n        body: requestConfig.body? JSON.stringify(requestConfig.body):null,\r\n       }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Request failed!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      applyData(data);\r\n\r\n      \r\n    } catch (err) {\r\n      setError(err.message || \"Something went wrong!\");\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\nreturn{\r\n    isLoading,// alternative for isLoadig:isLoading,\r\n    error,\r\n    sendRequest,\r\n}\r\n\r\n};\r\n\r\nexport default useDao;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,MAAM,GAAGA,CAACC,aAAa,EAAEC,SAAS,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMS,WAAW,GAAG,MAAOC,QAAQ,IAAK;IACtCJ,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAC3BV,aAAa,CAACW,GAAG,EAAC;QACjBC,MAAM,EAAEZ,aAAa,CAACY,MAAM,GAAGZ,aAAa,CAACY,MAAM,GAAC,KAAK;QACzDC,OAAO,EAAEb,aAAa,CAACa,OAAO,GAAGb,aAAa,CAACa,OAAO,GAAC,CAAC,CAAC;QACzDC,IAAI,EAAEd,aAAa,CAACc,IAAI,GAAEC,IAAI,CAACC,SAAS,CAAChB,aAAa,CAACc,IAAI,CAAC,GAAC;MAC9D,CACD,CAAC;MAED,IAAI,CAACL,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClCnB,SAAS,CAACkB,IAAI,CAAC;IAGjB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZf,QAAQ,CAACe,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACAlB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAEH,OAAM;IACFD,SAAS;IAAC;IACVE,KAAK;IACLE;EACJ,CAAC;AAED,CAAC;AAACL,EAAA,CApCIH,MAAM;AAsCZ,eAAeA,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}