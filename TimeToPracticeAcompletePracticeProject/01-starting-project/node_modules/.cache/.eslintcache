[{"C:\\Users\\antan\\Desktop\\ReactLearning\\TimeToPracticeAcompletePracticeProject\\01-starting-project\\src\\index.js":"1","C:\\Users\\antan\\Desktop\\ReactLearning\\TimeToPracticeAcompletePracticeProject\\01-starting-project\\src\\App.js":"2","C:\\Users\\antan\\Desktop\\ReactLearning\\TimeToPracticeAcompletePracticeProject\\01-starting-project\\src\\Header.js":"3","C:\\Users\\antan\\Desktop\\ReactLearning\\TimeToPracticeAcompletePracticeProject\\01-starting-project\\src\\InvestForm.js":"4","C:\\Users\\antan\\Desktop\\ReactLearning\\TimeToPracticeAcompletePracticeProject\\01-starting-project\\src\\Result.js":"5"},{"size":255,"mtime":1686643417000,"results":"6","hashOfConfig":"7"},{"size":809,"mtime":1689951126937,"results":"8","hashOfConfig":"7"},{"size":274,"mtime":1689832119890,"results":"9","hashOfConfig":"7"},{"size":3918,"mtime":1689950162978,"results":"10","hashOfConfig":"7"},{"size":1290,"mtime":1689950965534,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yc55fi",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\antan\\Desktop\\ReactLearning\\TimeToPracticeAcompletePracticeProject\\01-starting-project\\src\\index.js",[],[],"C:\\Users\\antan\\Desktop\\ReactLearning\\TimeToPracticeAcompletePracticeProject\\01-starting-project\\src\\App.js",[],[],"C:\\Users\\antan\\Desktop\\ReactLearning\\TimeToPracticeAcompletePracticeProject\\01-starting-project\\src\\Header.js",[],[],"C:\\Users\\antan\\Desktop\\ReactLearning\\TimeToPracticeAcompletePracticeProject\\01-starting-project\\src\\InvestForm.js",["29"],[],"import React, { useState } from \"react\";\r\n\r\nfunction InvestForm(props) {\r\n  const [userInput, setuserInput] = useState({\r\n    currentSavings: \"\",\r\n    yearlySavings: \"\",\r\n    expectedReturn: \"\",\r\n    investmentDuration: \"\",\r\n  });\r\n\r\n  const [yearlyData, setYearlyData] = useState([]);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(userInput);\r\n    props.sendDataToParent(userInput.currentSavings);\r\n\r\n    // Calculate the yearlyData and update the state\r\n    const yearlyData = calculateYearlyData(userInput);\r\n    setYearlyData(yearlyData);\r\n\r\n    console.log(\"Form submitted:\");\r\n    \r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setuserInput((prevFormData) => ({\r\n      ...prevFormData,\r\n      [name]: name === \"expectedReturn\" ? parseFloat(value) : parseInt(value, 10),\r\n    }));\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setuserInput({\r\n      currentSavings: \"\",\r\n      yearlySavings: \"\",\r\n      expectedReturn: \"\",\r\n      investmentDuration: \"\",\r\n    });\r\n\r\n    setYearlyData([]); // Reset the yearlyData state when the form is reset\r\n  };\r\n\r\n  // Calculate the yearlyData based on user input\r\n  const calculateYearlyData = (userInput) => {\r\n    const yearlyData = [];\r\n    let currentSavings = userInput.currentSavings;\r\n    const yearlySavings = userInput.yearlySavings;\r\n    const expectedReturn = userInput.expectedReturn / 100;\r\n    const investmentDuration = userInput.investmentDuration;\r\n\r\n    // The below code calculates yearly results (total savings, interest, etc.)\r\n    for (let i = 0; i < investmentDuration; i++) {\r\n      const yearlyInterest = currentSavings * expectedReturn;\r\n      currentSavings += yearlyInterest + yearlySavings;\r\n      yearlyData.push({\r\n        year: i + 1,\r\n        yearlyInterest: yearlyInterest,\r\n        savingsEndOfYear: currentSavings,\r\n        yearlySavings: yearlySavings,\r\n      });\r\n    }\r\n props.data(yearlyData);\r\n console.log(props.handleFormSubmit);\r\n    return yearlyData;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <div className=\"input-group\">\r\n          <p>\r\n            <label htmlFor=\"current-savings\">Current Savings ($)</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"current-savings\"\r\n              name=\"currentSavings\"\r\n              value={userInput.currentSavings}\r\n              onChange={handleChange}\r\n            />\r\n          </p>\r\n          <p>\r\n            <label htmlFor=\"yearly-contribution\">Yearly Savings ($)</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"yearly-contribution\"\r\n              name=\"yearlySavings\"\r\n              value={userInput.yearlySavings}\r\n              onChange={handleChange}\r\n            />\r\n          </p>\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <p>\r\n            <label htmlFor=\"expected-return\">\r\n              Expected Interest (%, per year)\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"expected-return\"\r\n              name=\"expectedReturn\"\r\n              value={userInput.expectedReturn}\r\n              onChange={handleChange}\r\n            />\r\n          </p>\r\n          <p>\r\n            <label htmlFor=\"duration\">Investment Duration (years)</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"duration\"\r\n              name=\"investmentDuration\"\r\n              value={userInput.investmentDuration}\r\n              onChange={handleChange}\r\n            />\r\n          </p>\r\n        </div>\r\n        <p className=\"actions\">\r\n          <button type=\"reset\" className=\"buttonAlt\" onClick={handleReset}>\r\n            Reset\r\n          </button>\r\n          <button type=\"submit\" className=\"button\">\r\n            Calculate\r\n          </button>\r\n        </p>\r\n      </form>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InvestForm;\r\n",[],"C:\\Users\\antan\\Desktop\\ReactLearning\\TimeToPracticeAcompletePracticeProject\\01-starting-project\\src\\Result.js",[],[],{"ruleId":"30","severity":1,"message":"31","line":11,"column":10,"nodeType":"32","messageId":"33","endLine":11,"endColumn":20},"no-unused-vars","'yearlyData' is assigned a value but never used.","Identifier","unusedVar"]